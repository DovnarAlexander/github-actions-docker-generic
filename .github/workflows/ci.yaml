---

name: CI

on:
  schedule:
    - cron: '0 1 * * *' # everyday at 1 AM
  pull_request:
  push:
    branches: master

jobs:
  # lint:
  #   name: Lint Code Base
  #   runs-on: ubuntu-latest
  #   # if: github.event_name != 'push' || github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v2
  #     - name: Lint Code Base
  #       uses: github/super-linter@v3
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         VALIDATE_POWERSHELL: false # To get rid of error

  # docker:
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Prepare env vars
  #       id: info
  #       run: .github/docker-env.sh
  #       env:
  #         EVENT: ${{ github.event_name }}
  #         EVENT_NUMBER: ${{ github.event.number }}
  #         GITHUB_SHA: ${{ github.sha }}
  #     - name: Build and Push
  #       uses: elgohr/Publish-Docker-Github-Action@master
  #       with:
  #         name: docker.pkg.github.com/${{ github.repository }}/service
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GROUP_TOKEN }}
  #         registry: docker.pkg.github.com
  #         tags: ${{ steps.info.outputs.tags }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    # needs: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        id: Changelog
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Bump version and push tag
        id: create_tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
      - name: Create Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GROUP_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: true
